type Customer {
  id: ID!
  name: String!
  email: String!
  cpf: String!
  birthday: String!
  address: Address!
}

input CustomerInput {
  name: String
  email: String
  cpf: String
  birthday: String
  street: String
  neighborhood: String
  city: String
  state: String
  country: String
  cep: String
  number: String
}

type Address {
  street: String!
  neighborhood: String!
  city: String!
  state: String!
  country: String!
  cep: String!
  number: String!
}

type Product {
  id: ID!
  name: String!
  image: String!
  description: String!
  weight: String
  price: Float!
  quantity: Int!
}

input ProductInput {
  name: String
  image: String
  description: String
  weight: String
  price: Float
  quantity: Int
}

type Query {
  customers: [Customer!]!
  customer(id: ID!): Customer
  products: [Product!]!
  product(id: ID!): Product
}

type Mutation {
  createCustomer(data: CustomerInput!): Customer
  updateCustomer(id: ID!, data: CustomerInput): Customer
  deleteCustomer(id: ID!): Boolean
  createProduct(data: ProductInput!): Product
  updateProduct(id: ID!, data: ProductInput): Product
  deleteProduct(id: ID!): Boolean
}
